{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"FinalProject_DSC155.ipynb의 사본","provenance":[{"file_id":"1IbqYDOPVdbipOMdASxhiXwSj3T0xKUw6","timestamp":1647053510307}],"collapsed_sections":[],"mount_file_id":"1IbqYDOPVdbipOMdASxhiXwSj3T0xKUw6","authorship_tag":"ABX9TyO0wDRHEnRCvlGejT8j7B16"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["##PCA Project\n","# **Set up**"],"metadata":{"id":"jRYRLmzudjDz"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","# Calling the data and showing the head\n","res_data = pd.read_csv('/content/drive/MyDrive/Residential-Building-Data.csv')\n","res_data.head()\n","\n","\n","copy = res_data.copy()\n","X = copy.iloc[1:]\n","\n","# Making all the values in the data to numeric\n","for col in X.columns:\n","  X[col] = pd.to_numeric(X[col])\n","  \n","# Helper function to delete categorical data\n","def clean_data(data):\n","  col_name = []\n","  for col in data.columns:\n","    if len(data[col].unique()) < (data.shape[0]/2):\n","      col_name.append(col)\n","  return data.drop(columns = col_name)\n","\n","clean_data(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":528},"id":"xk6EsZFDdiNH","executionInfo":{"status":"ok","timestamp":1647052614539,"user_tz":480,"elapsed":248,"user":{"displayName":"Joon Cha","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16322110122864174725"}},"outputId":"dc870a55-9e63-4549-9877-b6f4b42fe588"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:16: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  app.launch_new_instance()\n"]},{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 5  Unnamed: 7  Unnamed: 9\n","1        3150.0       598.5     1010.84\n","2        7600.0      3040.0      963.81\n","3        4800.0       480.0      689.84\n","4         685.0        13.7      459.54\n","5        3000.0      1230.0      631.91\n","..          ...         ...         ...\n","368      1350.0       108.0      251.37\n","369       600.0        36.0      299.55\n","370      1900.0       285.0      364.41\n","371       510.0        30.6      245.28\n","372       890.0        35.6      237.03\n","\n","[372 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-a81cfdf6-b90c-4477-907c-e2cb93e1d33f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 5</th>\n","      <th>Unnamed: 7</th>\n","      <th>Unnamed: 9</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>3150.0</td>\n","      <td>598.5</td>\n","      <td>1010.84</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7600.0</td>\n","      <td>3040.0</td>\n","      <td>963.81</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4800.0</td>\n","      <td>480.0</td>\n","      <td>689.84</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>685.0</td>\n","      <td>13.7</td>\n","      <td>459.54</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>3000.0</td>\n","      <td>1230.0</td>\n","      <td>631.91</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>368</th>\n","      <td>1350.0</td>\n","      <td>108.0</td>\n","      <td>251.37</td>\n","    </tr>\n","    <tr>\n","      <th>369</th>\n","      <td>600.0</td>\n","      <td>36.0</td>\n","      <td>299.55</td>\n","    </tr>\n","    <tr>\n","      <th>370</th>\n","      <td>1900.0</td>\n","      <td>285.0</td>\n","      <td>364.41</td>\n","    </tr>\n","    <tr>\n","      <th>371</th>\n","      <td>510.0</td>\n","      <td>30.6</td>\n","      <td>245.28</td>\n","    </tr>\n","    <tr>\n","      <th>372</th>\n","      <td>890.0</td>\n","      <td>35.6</td>\n","      <td>237.03</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>372 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a81cfdf6-b90c-4477-907c-e2cb93e1d33f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a81cfdf6-b90c-4477-907c-e2cb93e1d33f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a81cfdf6-b90c-4477-907c-e2cb93e1d33f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":195}]},{"cell_type":"markdown","source":["I have imported the residential building data from Novel Machine Learning Model for Estimation of Sale Prices of Real Estate Units. In the original data set, the author tried to make an output of two variables: construction costs and sale prices. This data set is about residential building data with different project dates of the construction with information about each project. There are total of 373 attributes and 109 features, meaning that the data is high demensional with gamma of 3.422 for m/n. For my use, I have deleted the categorical values, but shockingly found out that there are only three non-categorical attributes. Thus, I found a new data set called sonar."],"metadata":{"id":"ePnyuinidhOL"}},{"cell_type":"code","source":["data2 = pd.read_csv('/content/drive/MyDrive/sonar.csv')\n","data2.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":235},"id":"oSNJczqQw54d","executionInfo":{"status":"ok","timestamp":1647052615694,"user_tz":480,"elapsed":180,"user":{"displayName":"Joon Cha","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16322110122864174725"}},"outputId":"4a8bf1df-081d-4b84-c599-5f8c62083341"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   0.0200  0.0371  0.0428  0.0207  0.0954  0.0986  0.1539  0.1601  0.3109  \\\n","0  0.0453  0.0523  0.0843  0.0689  0.1183  0.2583  0.2156  0.3481  0.3337   \n","1  0.0262  0.0582  0.1099  0.1083  0.0974  0.2280  0.2431  0.3771  0.5598   \n","2  0.0100  0.0171  0.0623  0.0205  0.0205  0.0368  0.1098  0.1276  0.0598   \n","3  0.0762  0.0666  0.0481  0.0394  0.0590  0.0649  0.1209  0.2467  0.3564   \n","4  0.0286  0.0453  0.0277  0.0174  0.0384  0.0990  0.1201  0.1833  0.2105   \n","\n","   0.2111  ...  0.0027  0.0065  0.0159  0.0072  0.0167  0.0180  0.0084  \\\n","0  0.2872  ...  0.0084  0.0089  0.0048  0.0094  0.0191  0.0140  0.0049   \n","1  0.6194  ...  0.0232  0.0166  0.0095  0.0180  0.0244  0.0316  0.0164   \n","2  0.1264  ...  0.0121  0.0036  0.0150  0.0085  0.0073  0.0050  0.0044   \n","3  0.4459  ...  0.0031  0.0054  0.0105  0.0110  0.0015  0.0072  0.0048   \n","4  0.3039  ...  0.0045  0.0014  0.0038  0.0013  0.0089  0.0057  0.0027   \n","\n","   0.0090  0.0032  R  \n","0  0.0052  0.0044  R  \n","1  0.0095  0.0078  R  \n","2  0.0040  0.0117  R  \n","3  0.0107  0.0094  R  \n","4  0.0051  0.0062  R  \n","\n","[5 rows x 61 columns]"],"text/html":["\n","  <div id=\"df-e0a2ebef-50ab-4c83-aa07-9dd683786dbc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0.0200</th>\n","      <th>0.0371</th>\n","      <th>0.0428</th>\n","      <th>0.0207</th>\n","      <th>0.0954</th>\n","      <th>0.0986</th>\n","      <th>0.1539</th>\n","      <th>0.1601</th>\n","      <th>0.3109</th>\n","      <th>0.2111</th>\n","      <th>...</th>\n","      <th>0.0027</th>\n","      <th>0.0065</th>\n","      <th>0.0159</th>\n","      <th>0.0072</th>\n","      <th>0.0167</th>\n","      <th>0.0180</th>\n","      <th>0.0084</th>\n","      <th>0.0090</th>\n","      <th>0.0032</th>\n","      <th>R</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0453</td>\n","      <td>0.0523</td>\n","      <td>0.0843</td>\n","      <td>0.0689</td>\n","      <td>0.1183</td>\n","      <td>0.2583</td>\n","      <td>0.2156</td>\n","      <td>0.3481</td>\n","      <td>0.3337</td>\n","      <td>0.2872</td>\n","      <td>...</td>\n","      <td>0.0084</td>\n","      <td>0.0089</td>\n","      <td>0.0048</td>\n","      <td>0.0094</td>\n","      <td>0.0191</td>\n","      <td>0.0140</td>\n","      <td>0.0049</td>\n","      <td>0.0052</td>\n","      <td>0.0044</td>\n","      <td>R</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0262</td>\n","      <td>0.0582</td>\n","      <td>0.1099</td>\n","      <td>0.1083</td>\n","      <td>0.0974</td>\n","      <td>0.2280</td>\n","      <td>0.2431</td>\n","      <td>0.3771</td>\n","      <td>0.5598</td>\n","      <td>0.6194</td>\n","      <td>...</td>\n","      <td>0.0232</td>\n","      <td>0.0166</td>\n","      <td>0.0095</td>\n","      <td>0.0180</td>\n","      <td>0.0244</td>\n","      <td>0.0316</td>\n","      <td>0.0164</td>\n","      <td>0.0095</td>\n","      <td>0.0078</td>\n","      <td>R</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0100</td>\n","      <td>0.0171</td>\n","      <td>0.0623</td>\n","      <td>0.0205</td>\n","      <td>0.0205</td>\n","      <td>0.0368</td>\n","      <td>0.1098</td>\n","      <td>0.1276</td>\n","      <td>0.0598</td>\n","      <td>0.1264</td>\n","      <td>...</td>\n","      <td>0.0121</td>\n","      <td>0.0036</td>\n","      <td>0.0150</td>\n","      <td>0.0085</td>\n","      <td>0.0073</td>\n","      <td>0.0050</td>\n","      <td>0.0044</td>\n","      <td>0.0040</td>\n","      <td>0.0117</td>\n","      <td>R</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0762</td>\n","      <td>0.0666</td>\n","      <td>0.0481</td>\n","      <td>0.0394</td>\n","      <td>0.0590</td>\n","      <td>0.0649</td>\n","      <td>0.1209</td>\n","      <td>0.2467</td>\n","      <td>0.3564</td>\n","      <td>0.4459</td>\n","      <td>...</td>\n","      <td>0.0031</td>\n","      <td>0.0054</td>\n","      <td>0.0105</td>\n","      <td>0.0110</td>\n","      <td>0.0015</td>\n","      <td>0.0072</td>\n","      <td>0.0048</td>\n","      <td>0.0107</td>\n","      <td>0.0094</td>\n","      <td>R</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0286</td>\n","      <td>0.0453</td>\n","      <td>0.0277</td>\n","      <td>0.0174</td>\n","      <td>0.0384</td>\n","      <td>0.0990</td>\n","      <td>0.1201</td>\n","      <td>0.1833</td>\n","      <td>0.2105</td>\n","      <td>0.3039</td>\n","      <td>...</td>\n","      <td>0.0045</td>\n","      <td>0.0014</td>\n","      <td>0.0038</td>\n","      <td>0.0013</td>\n","      <td>0.0089</td>\n","      <td>0.0057</td>\n","      <td>0.0027</td>\n","      <td>0.0051</td>\n","      <td>0.0062</td>\n","      <td>R</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 61 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e0a2ebef-50ab-4c83-aa07-9dd683786dbc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e0a2ebef-50ab-4c83-aa07-9dd683786dbc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e0a2ebef-50ab-4c83-aa07-9dd683786dbc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":196}]},{"cell_type":"markdown","source":["This is the data set used by Gorman and Sejnowski in their study\n","of the classification of sonar signals using a neural network. They classified into two groups: solar mines and solar rocks, indicated as M and R. They used train and test set to train the data and performed angle independent experiments. Each row represents a pattern that represents the energy within a particular frequency band. In the other hand, column represents the aspect angle. However, in this particular project, I found two outliers in Marcenko Pastur and performed a PCA test, hoping to find some kind of meaning in this data."],"metadata":{"id":"I6dp-CT972nC"}},{"cell_type":"markdown","source":["# **Methodology**"],"metadata":{"id":"Wl0yW7aqqlp_"}},{"cell_type":"markdown","source":["This data could be used in a variety of ways. However, in this particular project, eigenvalues and eigenvectors were found with covariance matrix to perform Marcenko Pastur line. Using the empirical eigenvalues and the Marcenko Pastur line, I have found the best fit gamma and the outliers from the graph. Two biggest outliers were chosen to perform the PCA (with the SVD values) to find two principal components, which contains the most variance of original dataset. The PCs will classify in two types, Rocks and Mines, which are shown as R and M, respectively. \n","\n"],"metadata":{"id":"z05jQd-rql13"}},{"cell_type":"markdown","source":["# **Calculations and  Best Fits**"],"metadata":{"id":"PNsohfX-d83j"}},{"cell_type":"code","source":["# Get the copy of a data set to use\n","copy = data2.copy()\n","target = copy['R']\n","copy = copy.set_index('R')\n","X = copy\n","\n","# Naming the key values\n","m = copy.shape[0]\n","n = copy.shape[1]\n","gamma = (m/n)\n","p = (n * gamma)\n","\n","# Making all the values in the data to numeric\n","for col in X.columns:\n","  X[col] = pd.to_numeric(X[col])\n","\n","X = X.to_numpy()\n","\n","# Standardizing the data\n","X = (X - X.mean()) / X.std()\n","\n","# Sample covariance matrix\n","Y = X.T@X/n \n","X = Y\n","\n","# Calculating Eigenvalues and eigvectors\n","eigvals, eigvecs = np.linalg.eigh(Y)\n"],"metadata":{"id":"FAR_HX7QYnNW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Plotting the empirical eigenvalues\n","plt.hist(eigvals,density=True,bins=100, label='Empirical eigenvalues');"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"ob5YPL4paY25","executionInfo":{"status":"ok","timestamp":1647052618797,"user_tz":480,"elapsed":564,"user":{"displayName":"Joon Cha","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16322110122864174725"}},"outputId":"fcb50af7-7a5d-46a8-cba2-9f081b66207d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["n = X.shape[1]\n","p = X.shape[0]\n","# Gamma using p/n\n","gamma = p/n\n","\n","a = (1 - np.sqrt(gamma))**2\n","b = (1 + np.sqrt(gamma))**2\n","\n","# Limiting measure\n","edges = np.linspace(a,b,100);\n","mu = np.sqrt((edges-a)*(b-edges))/(2*np.pi*gamma)\n","\n","# Empirical histogram\n","plt.hist(eigvals,bins=edges, density = True,label='Empirical eigenvalues')\n","plt.plot(edges,mu/edges,'r',label='Marcenko-Pastur law')\n","_ = plt.legend()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"et1AS-S5ZeQx","executionInfo":{"status":"ok","timestamp":1647052619351,"user_tz":480,"elapsed":558,"user":{"displayName":"Joon Cha","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16322110122864174725"}},"outputId":"1a4f3a3f-b3db-4505-bf79-ab7c5f7f3ba7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:15: RuntimeWarning: invalid value encountered in true_divide\n","  from ipykernel import kernelapp as app\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["I initially tried to work on with gamma as p/n, which does not visualize the data very well. Thus, I decided to find the best fitting gamma by adjusting the values."],"metadata":{"id":"cwm20S3myvP6"}},{"cell_type":"code","source":["# Finding the best gamma \n","gamma = 0.9\n","\n","a = (1 - np.sqrt(gamma))**2\n","b = (1 + np.sqrt(gamma))**2\n","\n","# Limiting measure\n","edges = np.linspace(a,b,100);\n","mu = np.sqrt((edges-a)*(b-edges))/(2*np.pi*gamma)\n","\n","# Empirical histogram\n","plt.hist(eigvals,bins=edges, density = True,label='Empirical eigenvalues')\n","plt.plot(edges,mu/edges,'r',label='Marcenko-Pastur law')\n","_ = plt.legend()"],"metadata":{"id":"Ndph6YFffa0l","colab":{"base_uri":"https://localhost:8080/","height":265},"executionInfo":{"status":"ok","timestamp":1647052620710,"user_tz":480,"elapsed":805,"user":{"displayName":"Joon Cha","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16322110122864174725"}},"outputId":"f8257e5f-638b-44fa-a4b9-ac981c81e0bf"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["After some fixes, I have found that gamma of 0.90 seems to be the best fit for my data. The marcenko-pastur line, however, does not perfectly fit the empirical eigenvalues. I concluded that this phenomenon is due to many different factors. Most significantly, the fourth moment is 17478, which is extremely high. This could explain why the line is not coming to a good fit due to no application of Bai Yin. "],"metadata":{"id":"heWdAehry_qM"}},{"cell_type":"code","source":["X = copy.iloc[1:]\n","\n","# Making all the values in the data to numeric\n","for col in X.columns:\n","  X[col] = pd.to_numeric(X[col])\n","\n","X = X.to_numpy()\n","\n","X = X - X.mean()\n","\n","# Calculating the fourth moment\n","var = np.sum(X**2)\n","fourth_moment = np.sum(X**4)*np.sqrt(var**4)/(m*n)\n","fourth_moment"],"metadata":{"id":"kOb_mp9BpPt5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1647052621063,"user_tz":480,"elapsed":172,"user":{"displayName":"Joon Cha","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16322110122864174725"}},"outputId":"e1dc6189-c44b-4b59-ca86-5ac4730b2eca"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"\n"]},{"output_type":"execute_result","data":{"text/plain":["17478.18181300674"]},"metadata":{},"execution_count":201}]},{"cell_type":"markdown","source":["# **Determing the Outliers**"],"metadata":{"id":"qtOXz0IUnBpF"}},{"cell_type":"code","source":["# Determine outliers\n","out_eigvals = eigvals[eigvals > b]\n","\n","# Choosing the two biggest outliers\n","out_eigvals = np.array([23.57530534, 137.01097871])\n","out_eigvals"],"metadata":{"id":"2mcCwtkIsZcZ","executionInfo":{"status":"ok","timestamp":1647052621956,"user_tz":480,"elapsed":165,"user":{"displayName":"Joon Cha","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16322110122864174725"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"0ffeadf9-4b28-4f9b-9f51-b085754f6eaf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 23.57530534, 137.01097871])"]},"metadata":{},"execution_count":202}]},{"cell_type":"markdown","source":["# **PCA to Determine PC**"],"metadata":{"id":"-O6YZtHInPVD"}},{"cell_type":"code","source":["# SVD of centered_features\n","\n","U, S, Vt = np.linalg.svd(X, full_matrices=False)\n","\n","# Q captures first two values because I chose two outliers\n","Q = Vt[:,[0, 1]]\n","X_mean = np.mean(X, axis = 1)\n","PCs_centered = X @ Q\n","\n","PCs_mean = X.mean(axis=0) @ Q\n","# PCs_mean = np.reshape(PCs_mean, (-1, 1))\n","\n","# Determine the principal components corresponding to the outlier eigenvalues\n","PCs = PCs_centered + PCs_mean"],"metadata":{"id":"10qSD1mDKhvG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["target = target.drop(0,0)\n","plt.figure(figsize=(9, 6))\n","plt.title(\"PC2 vs. PC1 for Sonar Data\")\n","plt.xlabel(\"PC1\")\n","plt.ylabel(\"PC2\")\n","sns.scatterplot(x = PCs[:,0], y = PCs[:, 1], hue = target);\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":404},"id":"zH0t0v0LKhxt","executionInfo":{"status":"ok","timestamp":1647052625128,"user_tz":480,"elapsed":401,"user":{"displayName":"Joon Cha","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16322110122864174725"}},"outputId":"5a9c7296-19cd-4623-c78f-b10dc6c914fa"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 648x432 with 1 Axes>"],"image/png":"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rQDGmIXA2UDLJEZERER6WkKGdyjJR3s3uOqqq+jXrx+TJk1i6dKl3XLPQA4nDQKa/rayvW0tnWeMWWOMedYYM9jXjYwx1xljVhhjVuTm5vZErCIiIn3bybdDWFTztrAo194NMjIyuOGGG7rlXg16+8TexcAwa+1k4C3gUV8nWWsftNZmWmszU1NT/RqgiIhInzD5fJh3HyQMBoz777z7XHsXlJWVtWo74YQTePnll7t0XwjscFIO0LRnJcPbdoC1tumg2UPAH/0Ql4iIyOFp8vldTlr8KZA9McuBUcaY4caYcOACYFHTE4wxA5oczge+9GN8IiIi0osFrCfGWltrjLkeeAPwAI9Ya9cZY+4EVlhrFwE3GGPmA7VAAXBFoOIVERGR3iWQw0lYa18FXm3RdnuT728FbvV3XCIiIn2FtRZjTKDD6BBrbafO7+0Te0VEROQQRUZGkp+f3+nkIBCsteTn5xMZGdnhawLaEyMiIiI9JyMjg+zsbIKl/EhkZCQZGR2vS6MkRkREpI8KCwtj+PDhgQ6jx2g4SURERIKSkhgREREJSkpiREREJCgpiREREZGgpCRGREREgpKSGBEREQlKSmJEREQkKCmJERERkaCkJEZERESCkpIYERERCUpKYkRERCQoKYkRERGRoKQkRkRERIKSkhgREREJSkpiREREJCgpiREREZGgpCRGREREgpKSGBEREQlKSmJEREQkKCmJERERkaCkJEZERESCkpIYERERCUpKYkRERCQoKYkRERGRoKQkRkRERIKSkhgREREJSkpiREREJCgpiREREZGgFNAkxhhzmjFmozFmszHmpwc57zxjjDXGZPozPhEREem9ApbEGGM8wP3A6cB44EJjzHgf58UBPwA+8W+EIiIi0psFsidmOrDZWrvVWlsNLATO9nHer4G7gEp/BiciIiK9WyCTmEHAzibH2d62A4wx04DB1tpX/BmYiIiI9H69dmKvMSYE+Avw4w6ce50xZoUxZkVubm7PByciIp1TVQa1NYGOQvqYQCYxOcDgJscZ3rYGccBEYKkxJguYCSzyNbnXWvugtTbTWpuZmpragyGLiEinlOyBTx+ER06B566CncsDHZH0IaEBfPZyYJQxZjguebkAuKjhRWttMZDScGyMWQrcZK1d4ec4RUTkUFgLn/0Hlv7eHe9dB5vfgmuWQP8JAQ1N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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["The graph generally shows a positive linear trend. Hue is setted as R, as rock, and M, as mine. The data seems to have a lot of outliers, which might be the reason why representing this information in 2D is not the best case. There is a little separation between the two classes, with R having higher PC2 values than that of M. However, general trend of the two classes are the same. "],"metadata":{"id":"kkwfDAdCbgGx"}},{"cell_type":"code","source":["k=10\n","plt.xticks(range(k))\n","plt.xlabel(\"Principal Component\")\n","plt.ylabel(\"Variance (Component Scores)\")\n","plt.title(\"Scree Plot of Sonar Principal Components\")\n","plt.plot(range(k), np.square(S[:k])/(n-1));"],"metadata":{"id":"TFmfKXK_7zAx","colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"status":"ok","timestamp":1647053004552,"user_tz":480,"elapsed":549,"user":{"displayName":"Joon Cha","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16322110122864174725"}},"outputId":"55a0c5b6-e82f-4fd8-890f-f10f031c0fcd"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["The scree plot above is not neccessary but I just wanted to test more about the data. TA and I discussed about how I could figure out the best d if there were no label such as R and M in my case. As a result, we talked about how scree plot could be used when lack of label in the data. According to the scree plot, the best d seems to be 3. "],"metadata":{"id":"lZytKEd2dEAf"}}]}